# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-07-12 18:12
from __future__ import unicode_literals

import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import mptt.fields


class Migration(migrations.Migration):

    dependencies = [
        ('categories', '0002_auto_20170217_1111'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('wiki', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('thumbnail', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(), upload_to='uploads/categories/thumbnails')),
                ('thumbnail_width', models.IntegerField(blank=True, null=True)),
                ('thumbnail_height', models.IntegerField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('alternate_title', models.CharField(blank=True, default='', help_text='An alternative title to use on pages with this category.', max_length=100)),
                ('alternate_url', models.CharField(blank=True, help_text='An alternative URL to use instead of the one derived from the category hierarchy.', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('meta_keywords', models.CharField(blank=True, default='', help_text='Comma-separated keywords for search engines.', max_length=255)),
                ('meta_extra', models.TextField(blank=True, default='', help_text='(Advanced) Any additional HTML to be placed verbatim in the &lt;head&gt;')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='wiki.Category', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('tree_id', 'lft'),
                'abstract': False,
            },
            managers=[
                ('tree', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoryRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(verbose_name='object id')),
                ('relation_type', models.CharField(blank=True, help_text="A generic text field to tag a relation, like 'leadphoto'.", max_length=200, null=True, verbose_name='relation type')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.Category', verbose_name='category')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='content type')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='article_set', to='categories.Category'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together=set([('parent', 'name')]),
        ),
    ]
