# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-19 05:09
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('wiki', '0003_auto_20170819_0708'),
        ('metadata', '0004_fake-corpus-examplerevision_20170819'),
    ]

    operations = [
        #
        # migrations.CreateModel(
        #     name='Construal',
        #     fields=[
        #         ('metadata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='metadata.Metadata')),
        #     ],
        #     options={
        #         'verbose_name': 'construal',
        #     },
        #     bases=('metadata.metadata',),
        # ),
        # migrations.CreateModel(
        #     name='ConstrualRevision',
        #     fields=[
        #         ('metadatarevision_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='metadata.MetadataRevision')),
        #     ],
        #     options={
        #         'verbose_name': 'construal revision',
        #     },
        #     bases=('metadata.metadatarevision',),
        # ),
        #
        # migrations.CreateModel(
        #     name='Corpus',
        #     fields=[
        #         ('metadata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='metadata.Metadata')),
        #     ],
        #     options={
        #         'verbose_name': 'corpus',
        #     },
        #     bases=('metadata.metadata',),
        # ),
        #
        # migrations.CreateModel(
        #     name='ExampleRevision',
        #     fields=[
        #         ('metadatarevision_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='metadata.MetadataRevision')),
        #         ('exampleXML', models.CharField(max_length=200)),
        #         ('usage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='metadata.Construal')),
        #     ],
        #     options={
        #         'verbose_name': 'example revision',
        #     },
        #     bases=('metadata.metadatarevision',),
        # ),
        migrations.CreateModel(
            name='SimpleMetadata',
            fields=[
                ('articleplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wiki.ArticlePlugin')),
            ],
            bases=('wiki.articleplugin',),
        ),
        migrations.AlterModelOptions(
            name='example',
            options={'verbose_name': 'example'},
        ),
        migrations.RemoveField(
            model_name='example',
            name='exampleString',
        ),
        migrations.RemoveField(
            model_name='metadatarevision',
            name='articleRevision',
        ),
        migrations.RemoveField(
            model_name='supersenserevision',
            name='counterpart',
        ),
        migrations.RemoveField(
            model_name='usagerevision',
            name='function',
        ),
        migrations.RemoveField(
            model_name='usagerevision',
            name='role',
        ),
        migrations.AddField(
            model_name='supersense',
            name='category',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='supersense', to='wiki.ArticleCategory'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='supersenserevision',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sschildren', to='metadata.Supersense'),
        ),
        migrations.AddField(
            model_name='usagerevision',
            name='adposition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='metadata.Adposition'),
        ),
        migrations.AlterField(
            model_name='supersenserevision',
            name='animacy',
            field=models.PositiveIntegerField(choices=[(0, 'unspecified'), (1, 'animate')], default=0),
        ),
        # migrations.AlterField(
        #     model_name='language',
        #     name='animacy',
        #     field=models.PositiveIntegerField(choices=[(0, 'unspecified'), (1, 'animate')], default=0),
        # ),
        # migrations.CreateModel(
        #     name='Language',
        #     fields=[
        #         ('simplemetadata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='metadata.SimpleMetadata')),
        #         ('name', models.CharField(help_text='Basic name, e.g. <tt>English</tt>', max_length=200)),
        #         ('slug', models.CharField(help_text='Short (typically 2-character ISO) code for the language/dialect, such as <tt>en</tt> for English and <tt>en-us</tt> for American English.', max_length=20, validators=[django.core.validators.RegexValidator('^[a-z]+(-?[a-z]+)*$', message='Language code should consist of lowercase ASCII strings separated by hyphens')])),
        #         ('other_names', models.CharField(blank=True, max_length=200, verbose_name='Other names for the language/dialect')),
        #         ('wals_url', models.URLField(blank=True, help_text="World Atlas of Linguistic Structures entry listed on <a href='http://wals.info/languoid'>this page</a>, e.g. <tt>http://wals.info/languoid/lect/wals_code_heb</tt>", verbose_name='WALS URL')),
        #         ('rtl', models.BooleanField(default=False, verbose_name='Right-to-left language?')),
        #         ('navlink', models.BooleanField(default=False)),
        #         ('pre', models.PositiveIntegerField(choices=[(1, 'none'), (2, 'some'), (3, 'primary or sole type')], verbose_name='Prepositions/case prefixes or proclitics?')),
        #         ('post', models.PositiveIntegerField(choices=[(1, 'none'), (2, 'some'), (3, 'primary or sole type')], verbose_name='Postpositions/case suffixes or enclitics?')),
        #         ('circum', models.PositiveIntegerField(choices=[(1, 'none'), (2, 'some'), (3, 'primary or sole type')], verbose_name='Circumpositions/case circumfixes?')),
        #         ('separate_word', models.PositiveIntegerField(choices=[(1, 'none'), (2, 'some'), (3, 'primary or sole type')], verbose_name='Adpositions/overt case markers can be separate words?')),
        #         ('clitic_or_affix', models.PositiveIntegerField(choices=[(1, 'none'), (2, 'some'), (3, 'primary or sole type')], verbose_name='Adpositions/overt case markers can be clitics or affixes?')),
        #         ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='language', to='wiki.ArticleCategory')),
        #     ],
        #     options={
        #         'verbose_name': 'language',
        #     },
        #     bases=('metadata.simplemetadata',),
        # ),



        migrations.AddField(
            model_name='construalrevision',
            name='function',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rfs_with_function', to='metadata.Supersense'),
        ),
        migrations.AddField(
            model_name='construalrevision',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rfs_with_role', to='metadata.Supersense'),
        ),
        migrations.AddField(
            model_name='usagerevision',
            name='construal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='metadata.Construal'),
        ),
        # migrations.AddField(
        #     model_name='adposition',
        #     name='lang',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='adpositions', to='metadata.Language'),
        # ),
    ]
